{"version":3,"sources":["main.js","components/test.js"],"names":["state","user","list","httpGetAsync","theUrl","callback","httpRequest","XMLHttpRequest","onreadystatechange","readyState","status","data","responseText","open","send","httpPostAsync","payload","setRequestHeader","JSON","stringify","kendall_user","kendall_playlist","sam_user","getUserPlaylists","updateUserPlaylistsView","items","parse","i","length","playlist","oddEvenModifier","push","id","name","updateMainView","join","redirectToListView","document","getElementById","value","window","location","href","checkForEnter","event","keyCode","updateInitialView","querySelector","src","classList","add","updatePlaylistSongsView","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","song","hasDescription","messinaId","description","err","return","setPlaylistSongs","saveConfirmation","setTimeout","remove","content","querySelectorAll","innerHTML","toggleDescription","songId","target","closest","songEl","contains","playSong","style","opacity","onclick","pauseSong","findGetParameter","parameterName","result","tmp","search","substr","split","forEach","item","decodeURIComponent","pathname","console","log"],"mappings":"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","file":"main.min.js","sourcesContent":["let state = {\n  user: '',\n  list: ''\n}\n\n\nfunction httpGetAsync(theUrl, callback) { //theURL or a path to file\n  var httpRequest = new XMLHttpRequest();\n  httpRequest.onreadystatechange = function() {\n    if (httpRequest.readyState == 4 && httpRequest.status == 200) {\n      var data = httpRequest.responseText; //if you fetch a file you can JSON.parse(httpRequest.responseText)\n      if (callback) {\n        callback(data);\n      }\n    }\n  };\n\n  httpRequest.open('GET', theUrl, true);\n  httpRequest.send(null);\n}\n\n\nfunction httpPostAsync(theUrl, payload, callback) { //theURL or a path to file\n  var httpRequest = new XMLHttpRequest();\n  httpRequest.onreadystatechange = function() {\n    if (httpRequest.readyState == 4 && httpRequest.status == 200) {\n      var data = httpRequest.responseText; //if you fetch a file you can JSON.parse(httpRequest.responseText)\n      if (callback) {\n        callback(data);\n      }\n    }\n  };\n\n  httpRequest.open('POST', theUrl, true);\n  httpRequest.setRequestHeader('Content-Type', 'application/json');\n  httpRequest.send(JSON.stringify({\n    payload: payload\n  }));\n}\n\nconst kendall_user = 'kwatch90210';\nconst kendall_playlist = '2nrEA3uA0oD23f5KuRUu7u';\n\nconst sam_user = 'smessina';\n\n\nlet getUserPlaylists = (user) => {\n  switch (user) {\n    case 'sam':\n      user = sam_user;\n      break;\n    case 'kendall':\n      user = kendall_user;\n      break;\n    default:\n      break\n  }\n  state.user = user;\n  updateUserPlaylistsView();\n}\n\nlet updateUserPlaylistsView = () => {\n  httpGetAsync(`/playlists?user=${state.user}`, function(data) {\n    if (data === 'try again') {\n      updateUserPlaylistsView();\n      return;\n    }\n    let items = [];\n    data = JSON.parse(data).items;\n\n    for (let i = 0; i < data.length; i++) {\n      let playlist = data[i];\n      let oddEvenModifier = (i % 2 === 0) ? 'odd' : 'even';\n      items.push(`<p class=\"playlist playlist--${oddEvenModifier}\">\n                    <span class=\"playlist__pointer playlist__pointer--${oddEvenModifier}\"></span>\n                    <a class=\"playlist__link playlist__link--${oddEvenModifier}\" href=\"/songs?user=${state.user}&list=${playlist.id}\" >\n                      <span>\n                        ${playlist.name}\n                      </span>\n                    </a>\n                  </p>\n                `);\n    }\n    updateMainView(items.join(''));\n  });\n}\n\nlet redirectToListView = () => {\n  let id = document.getElementById('username').value;\n  window.location.href = `/lists?user=${id}`;\n}\n\nlet checkForEnter = (event) => {\n    if (event.keyCode == 13) {\n      redirectToListView();\n    }\n}\n\nlet updateInitialView = () => {\n  document.querySelector('.header-img').src = '/images/personalist-white.png';\n  document.querySelector('.header-img-container').classList.add('header-img-container--home');\n\n  document.querySelector('.header-img').classList.add('header-img--home');\n  updateMainView(`\n      <div class=\"btn-container\">\n          <input onkeypress=\"checkForEnter(event)\" type=\"text\" name=\"username\" id=\"username\" placeholder=\"Enter your Spotify username\">\n          <button class=\"btn\" onclick=\"redirectToListView()\" >\n            Go!\n          </button>\n      </div>\n    <div class=\"bands\">\n      <p></p>\n      <p></p>\n      <p></p>\n    </div>\n  `);\n}\n\nlet updatePlaylistSongsView = () => {\n  httpGetAsync(`/playlist?user=${state.user}&list=${state.list}`, function(data) {\n    let items = [];\n    data = JSON.parse(data);\n    for (let song of data['items']) {\n      let hasDescription = '';\n      let newData = {\n        // the special id for playlist+song combination.\n        // this is the key in the db for the song. the value is the description\n        \"messinaID\": song.messinaId,\n        \"description\": song.description\n      }\n      if (song.description.length > 0) {\n        hasDescription = 'has-description';\n      }\n      items.push(`\n      <div class=\"song-item song-item--${song.id} ${hasDescription}\">\n        <p onclick=\"toggleDescription(event, '${song.id}')\" class=\"song-item__name song-item__name--${song.id} clickable\">\n          <span>\n            ${song.name}\n          </span>\n          <span id=\"play-icon--${song.id}\" class=\"song-item__name__play\" onclick=\"playSong('${song.id}')\">\n            <svg id=\"play-icon-${song.id}\" class=\"feather feather-play sc-dnqmqq jxshSx\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" aria-hidden=\"true\" data-reactid=\"916\"><polygon points=\"5 3 19 12 5 21 5 3\"></polygon></svg>\n          </span>\n        </p>\n        <div class=\"song-item__description song-item__description--${song.id}\">\n          <textarea type=\"text\"\n                    placeholder=\"Description\"\n                    name=\"song-${song.messinaId}\"\n                    id=\"song-${song.messinaId}\">${song.description}</textarea>\n          <div class=\"song-item__description__btn-container\">\n            <button id=\"save-btn-${song.messinaId}\" class=\"save-btn clickable\" onclick=\"setPlaylistSongs('${song.messinaId}')\">Save</button>\n            <button id=\"cancel-btn-${song.messinaId}\" class=\"cancel-btn clickable\" onclick=\"toggleDescription(event, '${song.id}')\">Cancel</button>\n          </div>\n        </div>\n      </div>\n      `);\n    }\n    items.push('<div id=\"embed-player\"></div>');\n    updateMainView(items.join(''));\n  });\n}\n\nlet setPlaylistSongs = (id) => {\n  let saveBtn = document.getElementById(`save-btn-${id}`);\n  let cancelBtn = document.getElementById(`cancel-btn-${id}`);\n  let newDescription = document.getElementById(`song-${id}`).value;\n  let payload = [{\n    'id': id,\n    'description': newDescription\n  }];\n\n  httpPostAsync('/playlist', payload, (data) => {\n    let saveConfirmation = document.querySelector('.save-confirmation');\n    saveConfirmation.classList.add('save-confirmation--on');\n\n    setTimeout(() => {\n      saveConfirmation.classList.remove('save-confirmation--on');\n    }, 3000);\n  });\n}\n\nlet updateMainView = (content) => {\n  let mainSection = document.querySelectorAll('main#main')[0];\n  mainSection.innerHTML = content;\n}\n\nlet toggleDescription = (event, songId) => {\n  if (event.target.closest('.song-item__name__play')) return;\n  let songEl = document.querySelectorAll(`.song-item--${songId}`)[0];\n  if (songEl.classList.contains('song-item--shown')) {\n    songEl.classList.add('song-item--hidden');\n    songEl.classList.remove('song-item--shown');\n  } else {\n    songEl.classList.add('song-item--shown');\n    songEl.classList.remove('song-item--hidden');\n  }\n}\n\nlet playSong = (songId) => {\n  document.querySelectorAll(`#embed-player`)[0].innerHTML = `<iframe src=\"https://open.spotify.com/embed/track/${songId}\" width=\"100%\" height=\"80\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>`;\n  document.querySelectorAll(`#play-icon--${songId}`)[0].style.opacity = 0;\n  document.querySelectorAll(`#play-icon--${songId}`)[0].onclick = () => pauseSong(songId);\n  document.querySelectorAll(`#play-icon--${songId}`)[0].classList.add('play-icon--playing');\n  setTimeout(() => {\n    document.querySelectorAll(`#play-icon--${songId}`)[0].innerHTML = `\n<svg id=\"pause-icon-${songId}\" class=\"feather feather-x sc-dnqmqq jxshSx\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" aria-hidden=\"true\" data-reactid=\"1336\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line></svg>\n  `;\n    document.querySelectorAll(`#play-icon--${songId}`)[0].onclick = () => pauseSong(songId);\n    document.querySelectorAll(`#play-icon--${songId}`)[0].style.opacity = 1;\n  }, 500);\n}\n\nlet pauseSong = (songId) => {\n  document.querySelectorAll(`#embed-player`)[0].innerHTML = ``;\n  document.querySelectorAll(`#play-icon--${songId}`)[0].style.opacity = 0;\n  document.querySelectorAll(`#play-icon--${songId}`)[0].classList.remove('play-icon--playing');\n  setTimeout(() => {\n    document.querySelectorAll(`#play-icon--${songId}`)[0].innerHTML = `\n            <svg id=\"play-icon-${songId}\" class=\"feather feather-play sc-dnqmqq jxshSx\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" aria-hidden=\"true\" data-reactid=\"916\"><polygon points=\"5 3 19 12 5 21 5 3\"></polygon></svg>\n  `;\n    document.querySelectorAll(`#play-icon--${songId}`)[0].onclick = () => playSong(songId);\n    document.querySelectorAll(`#play-icon--${songId}`)[0].style.opacity = 1;\n  }, 500);\n}\n\nfunction findGetParameter(parameterName) {\n  var result = null,\n    tmp = [];\n  location.search\n    .substr(1)\n    .split(\"&\")\n    .forEach(function(item) {\n      tmp = item.split(\"=\");\n      if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);\n    });\n  return result;\n}\n\n(() => {\n  switch (window.location.pathname) {\n    case '/':\n      document.querySelectorAll('body')[0].id = 'home';\n      updateInitialView();\n      break;\n    case '/lists':\n      document.querySelectorAll('body')[0].id = 'lists';\n      state.user = findGetParameter('user');\n      updateUserPlaylistsView();\n      break;\n    case '/songs':\n      document.querySelectorAll('body')[0].id = 'songs';\n      state.user = findGetParameter('user');\n      state.list = findGetParameter('list');\n      updatePlaylistSongsView();\n      break;\n    default:\n      break;\n  }\n\n\n})()\n","console.log(\"asfd\");\n"]}