{"version":3,"sources":["main.js"],"names":["state","user","list","httpGetAsync","theUrl","_this","this","Promise","resolve","reject","httpRequest","XMLHttpRequest","open","onload","data","responseText","status","statusText","xhr","onerror","send","httpPostAsync","payload","_this2","setRequestHeader","JSON","stringify","updateUserPlaylistsView","playlists","then","items","parse","i","length","playlist","oddEvenModifier","push","id","name","updateMainView","join","console","log","redirectToListView","document","getElementById","value","window","location","href","checkForEnter","event","keyCode","updateInitialView","querySelector","src","classList","add","updatePlaylistSongsView","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","song","hasDescription","messinaId","description","err","return","setPlaylistSongs","saveConfirmation","setTimeout","remove","content","querySelectorAll","innerHTML","toggleDescription","songId","target","closest","songEl","contains","playSong","style","opacity","onclick","pauseSong","findGetParameter","parameterName","result","tmp","search","substr","split","forEach","item","decodeURIComponent","pathname"],"mappings":"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","file":"main.min.js","sourcesContent":["let state = {\n  user: '',\n  list: ''\n}\n\n\nfunction httpGetAsync(theUrl) {\n  return new Promise( (resolve, reject) => {\n    let httpRequest = new XMLHttpRequest();\n\n    httpRequest.open('GET', theUrl, true);\n\n    httpRequest.onload = () => {\n      let data = httpRequest.responseText;\n      if (httpRequest.status == 200) {\n        resolve(data)\n      }\n      else {\n        reject({\n          status: this.status,\n          statusText: xhr.statusText\n        });\n      }\n    };\n    httpRequest.onerror = () => {\n      reject({\n        status: this.status,\n        statusText: xhr.statusText\n      });\n    };\n\n    httpRequest.send(null);\n  });\n}\n\n\nfunction httpPostAsync(theUrl, payload) {\n  return new Promise((resolve, reject) => {\n    let httpRequest = new XMLHttpRequest();\n\n    httpRequest.open('POST', theUrl, true);\n    httpRequest.setRequestHeader('Content-Type', 'application/json');\n\n    httpRequest.onload = () => {\n      if (httpRequest.status == 200) {\n        let data = httpRequest.responseText;\n        resolve(data);\n      }\n      else {\n        reject({\n          status: this.status,\n          statusText: xhr.statusText\n        });\n      }\n    };\n\n    httpRequest.onerror = () => {\n      reject({\n        status: this.status,\n        statusText: xhr.statusText\n      });\n    };\n\n    httpRequest.send(JSON.stringify(payload));\n  });\n}\n\nlet updateUserPlaylistsView = (playlists) => {\n  httpGetAsync(`/playlists?user=${state.user}`)\n    .then((data) => {\n      if (data === 'try again') {\n        updateUserPlaylistsView();\n        return;\n      }\n      let items = [];\n      data = JSON.parse(data).items;\n\n      for (let i = 0; i < data.length; i++) {\n        let playlist = data[i];\n        let oddEvenModifier = (i % 2 === 0) ? 'odd' : 'even';\n        items.push(`<p class=\"playlist playlist--${oddEvenModifier}\">\n                    <span class=\"playlist__pointer playlist__pointer--${oddEvenModifier}\"></span>\n                    <a class=\"playlist__link playlist__link--${oddEvenModifier}\" href=\"/songs?user=${state.user}&list=${playlist.id}\" >\n                      <span>\n                        ${playlist.name}\n                      </span>\n                    </a>\n                  </p>\n                `);\n      }\n      updateMainView(items.join(''));\n    }, (data) => {\n      console.log(data);\n    });\n}\n\nlet redirectToListView = () => {\n  let id = document.getElementById('username').value;\n  window.location.href = `/lists?user=${id}`;\n}\n\nlet checkForEnter = (event) => {\n  if (event.keyCode == 13) {\n    redirectToListView();\n  }\n}\n\nlet updateInitialView = () => {\n  document.querySelector('.header-img').src = '/images/personalist-white.png';\n  document.querySelector('.header-img-container').classList.add('header-img-container--home');\n\n  document.querySelector('.header-img').classList.add('header-img--home');\n  updateMainView(`\n      <div class=\"btn-container\">\n          <input onkeypress=\"checkForEnter(event)\" type=\"text\" name=\"username\" id=\"username\" placeholder=\"Enter your Spotify username\">\n          <button class=\"btn\" onclick=\"redirectToListView()\" >\n            Go!\n          </button>\n      </div>\n    <div class=\"bands\">\n      <p></p>\n      <p></p>\n      <p></p>\n    </div>\n  `);\n}\n\nlet updatePlaylistSongsView = () => {\n  httpGetAsync(`/playlist?user=${state.user}&list=${state.list}`)\n    .then((data) => {\n      let items = [];\n      data = JSON.parse(data);\n      for (let song of data['items']) {\n        let hasDescription = '';\n        let newData = {\n          // the special id for playlist+song combination.\n          // this is the key in the db for the song. the value is the description\n          \"messinaID\": song.messinaId,\n          \"description\": song.description\n        }\n        if (song.description.length > 0) {\n          hasDescription = 'has-description';\n        }\n        items.push(`\n      <div class=\"song-item song-item--${song.id} ${hasDescription}\">\n        <p onclick=\"toggleDescription(event, '${song.id}')\" class=\"song-item__name song-item__name--${song.id} clickable\">\n          <span>\n            ${song.name}\n          </span>\n          <span id=\"play-icon--${song.id}\" class=\"song-item__name__play\" onclick=\"playSong('${song.id}')\">\n            <svg id=\"play-icon-${song.id}\" class=\"feather feather-play sc-dnqmqq jxshSx\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" aria-hidden=\"true\" data-reactid=\"916\"><polygon points=\"5 3 19 12 5 21 5 3\"></polygon></svg>\n          </span>\n        </p>\n        <div class=\"song-item__description song-item__description--${song.id}\">\n          <textarea type=\"text\"\n                    placeholder=\"Description\"\n                    name=\"song-${song.messinaId}\"\n                    id=\"song-${song.messinaId}\">${song.description}</textarea>\n          <div class=\"song-item__description__btn-container\">\n            <button id=\"save-btn-${song.messinaId}\" class=\"save-btn clickable\" onclick=\"setPlaylistSongs('${song.messinaId}')\">Save</button>\n            <button id=\"cancel-btn-${song.messinaId}\" class=\"cancel-btn clickable\" onclick=\"toggleDescription(event, '${song.id}')\">Cancel</button>\n          </div>\n        </div>\n      </div>\n      `);\n      }\n      items.push('<div id=\"embed-player\"></div>');\n      updateMainView(items.join(''));\n    });\n}\n\nlet setPlaylistSongs = (id) => {\n  let saveBtn = document.getElementById(`save-btn-${id}`);\n  let cancelBtn = document.getElementById(`cancel-btn-${id}`);\n  let newDescription = document.getElementById(`song-${id}`).value;\n  let payload = [{\n    'id': id,\n    'description': newDescription\n  }];\n\n  httpPostAsync('/playlist', payload)\n  .then((data) => {\n    let saveConfirmation = document.querySelector('.save-confirmation');\n    saveConfirmation.classList.add('save-confirmation--on');\n\n    setTimeout(() => {\n      saveConfirmation.classList.remove('save-confirmation--on');\n    }, 3000);\n  });\n}\n\nlet updateMainView = (content) => {\n  let mainSection = document.querySelectorAll('main#main')[0];\n  mainSection.innerHTML = content;\n}\n\nlet toggleDescription = (event, songId) => {\n  if (event.target.closest('.song-item__name__play')) return;\n  let songEl = document.querySelectorAll(`.song-item--${songId}`)[0];\n  if (songEl.classList.contains('song-item--shown')) {\n    songEl.classList.add('song-item--hidden');\n    songEl.classList.remove('song-item--shown');\n  } else {\n    songEl.classList.add('song-item--shown');\n    songEl.classList.remove('song-item--hidden');\n  }\n}\n\nlet playSong = (songId) => {\n  document.querySelectorAll(`#embed-player`)[0].innerHTML = `<iframe src=\"https://open.spotify.com/embed/track/${songId}\" width=\"100%\" height=\"80\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>`;\n  document.querySelectorAll(`#play-icon--${songId}`)[0].style.opacity = 0;\n  document.querySelectorAll(`#play-icon--${songId}`)[0].onclick = () => pauseSong(songId);\n  document.querySelectorAll(`#play-icon--${songId}`)[0].classList.add('play-icon--playing');\n  setTimeout(() => {\n    document.querySelectorAll(`#play-icon--${songId}`)[0].innerHTML = `\n<svg id=\"pause-icon-${songId}\" class=\"feather feather-x sc-dnqmqq jxshSx\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" aria-hidden=\"true\" data-reactid=\"1336\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line></svg>\n  `;\n    document.querySelectorAll(`#play-icon--${songId}`)[0].onclick = () => pauseSong(songId);\n    document.querySelectorAll(`#play-icon--${songId}`)[0].style.opacity = 1;\n  }, 500);\n}\n\nlet pauseSong = (songId) => {\n  document.querySelectorAll(`#embed-player`)[0].innerHTML = ``;\n  document.querySelectorAll(`#play-icon--${songId}`)[0].style.opacity = 0;\n  document.querySelectorAll(`#play-icon--${songId}`)[0].classList.remove('play-icon--playing');\n  setTimeout(() => {\n    document.querySelectorAll(`#play-icon--${songId}`)[0].innerHTML = `\n            <svg id=\"play-icon-${songId}\" class=\"feather feather-play sc-dnqmqq jxshSx\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" aria-hidden=\"true\" data-reactid=\"916\"><polygon points=\"5 3 19 12 5 21 5 3\"></polygon></svg>\n  `;\n    document.querySelectorAll(`#play-icon--${songId}`)[0].onclick = () => playSong(songId);\n    document.querySelectorAll(`#play-icon--${songId}`)[0].style.opacity = 1;\n  }, 500);\n}\n\nfunction findGetParameter(parameterName) {\n  var result = null,\n    tmp = [];\n  location.search\n    .substr(1)\n    .split(\"&\")\n    .forEach(function(item) {\n      tmp = item.split(\"=\");\n      if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);\n    });\n  return result;\n}\n\n(() => {\n  switch (window.location.pathname) {\n    case '/':\n      document.querySelectorAll('body')[0].id = 'home';\n      updateInitialView();\n      break;\n    case '/lists':\n      document.querySelectorAll('body')[0].id = 'lists';\n      state.user = findGetParameter('user');\n      updateUserPlaylistsView();\n      break;\n    case '/songs':\n      document.querySelectorAll('body')[0].id = 'songs';\n      state.user = findGetParameter('user');\n      state.list = findGetParameter('list');\n      updatePlaylistSongsView();\n      break;\n    default:\n      break;\n  }\n\n\n})()\n"]}